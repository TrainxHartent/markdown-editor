* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  /* 🐺 Night Howl */
  --blue: #0e1e2a;
  --dark: #000000;
  --darkblue: #112636;
  --lightblue: #9bc1d4;
  --white: #e0f1ff;
  --line: #1c3c54;

  /* 💄 Syntax Highlight */
  --tokenFunction: #e1722d;
  --tokenKeyword: #00b3fa;
  --tokenOperator: #ee7276;
  --tokenPunctuation: #aac1d5;
  --tokenString: #93e585;
  --tokenTag: #f87171;
  --tokenRegex: #ffffff;
  --comment: #9aa1ac;
}

::selection {
  background-color: var(--lightblue);
}

::-webkit-scrollbar {
  width: 2px;
}

::-webkit-scrollbar-track {
  background-color: none;
}

::-webkit-scrollbar-thumb {
  background-color: var(--lightblue);
}

html,
body {
  height: 100%;
  background-color: rgba(var(--background), 1);
}

.milkdown {
  position: relative;
  max-width: 80ch;
  margin: 0 auto;
  font-family: var(--typography);
  color: var(--lightblue);
}

.editor {
  outline: none;
  display: flex;
  flex-direction: column;
  gap: 2rem;
}

.editor h1 {
  font-size: 4rem;
  margin: 6rem 0;
  font-weight: 900;
  text-align: center;
}

.editor h2 {
  font-size: 2rem;
}

.editor p {
  font-size: 1.2rem;
  line-height: 1.8;
}

.editor ul,
.editor ol {
  display: flex;
  flex-direction: column;
  gap: 1rem;
  list-style-position: inside;
}

.editor li > p {
  display: inline-block;
}

.editor .blockquote {
  background-color: var(--darkblue);
  border-left: 2px solid var(--lightblue);
  padding: 2rem;
}

.editor .code-fence {
  font-size: 1rem;
  border-radius: 4px;
  font-family: var(--code);
  background-color: var(--darkblue);
}

.editor .code-fence pre {
  padding: 0;
}

.editor .code-fence code {
  font-family: var(--code);
}

.token.comment,
.token.prolog,
.token.doctype,
.token.cdata {
  color: var(--comment);
}

.token.punctuation {
  color: var(--tokenPunctuation);
}

.token.property,
.token.tag,
.token.boolean,
.token.number,
.token.constant,
.token.symbol,
.token.deleted {
  color: var(--tokenTag);
}

.token.selector,
.token.attr-name,
.token.string,
.token.char,
.token.builtin,
.token.inserted {
  color: var(--tokenString);
}

.token.operator,
.token.entity,
.token.url,
.language-css .token.string,
.style .token.string {
  color: var(--tokenOperator);
}

.token.atrule,
.token.attr-value,
.token.keyword {
  color: var(--tokenKeyword);
}

.token.function,
.token.class-name {
  color: var(--tokenFunction);
}

.token.regex,
.token.important,
.token.variable {
  color: var(--tokenRegex);
}
